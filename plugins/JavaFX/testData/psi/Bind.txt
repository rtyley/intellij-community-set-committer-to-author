JavFxFile:Bind.fx
  JavaFxVariableDeclaration
    JavaFxModifierList
      <empty list>
    PsiElement(JavaFx:var)('var')
    PsiWhiteSpace(' ')
    PsiElement(JavaFx:IDENTIFIER)('a')
    PsiWhiteSpace(' ')
    PsiElement(JavaFx:EQ)('=')
    PsiWhiteSpace(' ')
    JavaFxLiteralExpression
      PsiElement(JavaFx:INTEGER_LITERAL)('43')
  PsiElement(JavaFx:SEMICOLON)(';')
  PsiWhiteSpace('\n')
  JavaFxVariableDeclaration
    JavaFxModifierList
      <empty list>
    PsiElement(JavaFx:def)('def')
    PsiWhiteSpace(' ')
    PsiElement(JavaFx:IDENTIFIER)('b')
    PsiWhiteSpace(' ')
    PsiElement(JavaFx:EQ)('=')
    PsiWhiteSpace(' ')
    JavaFxBoundExpression
      PsiElement(JavaFx:bind)('bind')
      PsiWhiteSpace(' ')
      JavaFxBinaryExpression
        JavaFxReferenceExpression
          PsiElement(JavaFx:IDENTIFIER)('a')
        PsiWhiteSpace(' ')
        PsiElement(JavaFx:MULT)('*')
        PsiWhiteSpace(' ')
        JavaFxLiteralExpression
          PsiElement(JavaFx:INTEGER_LITERAL)('2')
  PsiElement(JavaFx:SEMICOLON)(';')
  PsiWhiteSpace('\n')
  JavaFxVariableDeclaration
    JavaFxModifierList
      <empty list>
    PsiElement(JavaFx:var)('var')
    PsiWhiteSpace(' ')
    PsiElement(JavaFx:IDENTIFIER)('c')
    PsiWhiteSpace(' ')
    PsiElement(JavaFx:EQ)('=')
    PsiWhiteSpace(' ')
    JavaFxBoundExpression
      PsiElement(JavaFx:bind)('bind')
      PsiWhiteSpace(' ')
      JavaFxReferenceExpression
        PsiElement(JavaFx:IDENTIFIER)('a')
      PsiWhiteSpace(' ')
      PsiElement(JavaFx:with)('with')
      PsiWhiteSpace(' ')
      PsiElement(JavaFx:inverse)('inverse')
  PsiElement(JavaFx:SEMICOLON)(';')
