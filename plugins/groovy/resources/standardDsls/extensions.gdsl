/*
 * Copyright 2000-2010 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package standardDsls

import com.intellij.psi.PsiParameter
import com.intellij.psi.util.PsiTreeUtil
import com.intellij.psi.util.TypeConversionUtil
import org.jetbrains.plugins.groovy.lang.psi.GroovyPsiElement
import org.jetbrains.plugins.groovy.lang.psi.impl.statements.expressions.TypesUtil
import org.jetbrains.plugins.groovy.lang.psi.impl.synthetic.GrGdkMethodImpl

/**
 * @author Maxim.Medvedev
 *//*
*/

def extension(def className, boolean isStatic = false) {
  contributor(context()) {

    if (!classType) return;

    def categoryClass = findClass(className)
    if (!categoryClass) return;
    def myPlace = PsiTreeUtil.getParentOfType(place, GroovyPsiElement, false)
    if (myPlace == null) return;
    categoryClass.methods.each {m ->
      def params = m.parameterList.parameters as List<PsiParameter>
      if (!params) return;
      def targetType = params[0].type
      if (!TypesUtil.isAssignableByMethodCallConversion(TypeConversionUtil.erasure(targetType), classType, myPlace)) return;

      add new GrGdkMethodImpl(m, isStatic)
    }
  }
}

extension "org.codehaus.groovy.runtime.DefaultGroovyMethods"
extension "org.codehaus.groovy.runtime.DefaultGroovyStaticMethods", true
extension "org.codehaus.groovy.runtime.DateGroovyMethods"
extension "org.codehaus.groovy.runtime.EncodingGroovyMethods"
extension "org.codehaus.groovy.runtime.SqlGroovyMethods"
extension "org.codehaus.groovy.runtime.SwingGroovyMethods"
extension "org.codehaus.groovy.runtime.XmlGroovyMethods"


