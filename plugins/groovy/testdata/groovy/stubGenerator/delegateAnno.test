interface DelegateFoo {
    def foo()
}

class DelegateBarImpl {
    @Delegate DelegateFoo foo;
    private @Delegate(interfaces=false) Runnable zoo;
}
-----
public interface DelegateFoo {
  public java.lang.Object foo() ;
}
---
public class DelegateBarImpl extends groovy.lang.GroovyObjectSupport implements groovy.lang.GroovyObject, DelegateFoo, java.lang.Runnable {
  public DelegateFoo getFoo() {
    return null;
  }

  public void setFoo(DelegateFoo foo) {
    return ;
  }

  public groovy.lang.MetaClass getMetaClass() {
    return null;
  }

  public void setMetaClass(groovy.lang.MetaClass mc) {
    return ;
  }

  public java.lang.Object invokeMethod(java.lang.String name, java.lang.Object args) {
    return null;
  }

  public java.lang.Object getProperty(java.lang.String propertyName) {
    return null;
  }

  public void setProperty(java.lang.String propertyName, java.lang.Object newValue) {
    return ;
  }

  public java.lang.Object foo() ;

  public abstract void run() ;

  private DelegateFoo foo = null;

  private java.lang.Runnable zoo = null;
}
---