{
  generatePsi=false

  parserClass="com.jetbrains.typoscript.lang.TypoScriptParser"
  stubParserClass="com.jetbrains.typoscript.lang.TypoScriptParserUtil"
  tokenTypeClass="com.jetbrains.typoscript.lang.TypoScriptTokenType"
  elementTypeClass="com.jetbrains.typoscript.lang.TypoScriptTokenType"
  elementTypeHolderClass="com.jetbrains.typoscript.lang.TypoScriptElementTypes"
  generateTokens=false
  parserImports="static com.jetbrains.typoscript.lang.TypoScriptTokenTypes.*"

  //tokens
 //C_STYLE_COMMENT
 //ONE_LINE_COMMENT
/*
  IElementType MODIFICATION_OPERATOR = new TypoScriptTokenType("MODIFY");
  IElementType ASSIGNMENT_OPERATOR = new TypoScriptTokenType("ASSIGN");

  IElementType MULTILINE_VALUE_OPERATOR_BEGIN = new TypoScriptTokenType("MULTILINE_OPEN");
  IElementType MULTILINE_VALUE_OPERATOR_END = new TypoScriptTokenType("MULTILINE_CLOSE");
  IElementType MULTILINE_VALUE = new TypoScriptTokenType("MULTILINE_VALUE");

  IElementType CODE_BLOCK_OPERATOR_BEGIN = new TypoScriptTokenType("CODE_BLOCK_OPEN");
  IElementType CODE_BLOCK_OPERATOR_END = new TypoScriptTokenType("CODE_BLOCK_CLOSE");
  IElementType UNSETTING_OPERATOR = new TypoScriptTokenType("UNSET");
  IElementType COPYING_OPERATOR = new TypoScriptTokenType("COPY");

  IElementType ASSIGNMENT_VALUE = new TypoScriptTokenType("ASSIGNMENT_VALUE");
  IElementType IGNORED_TEXT = new TypoScriptTokenType("IGNORED_TEXT");

  IElementType MODIFICATION_OPERATOR_FUNCTION = new TypoScriptTokenType("MODIFICATION_FUNCTION");
  IElementType MODIFICATION_OPERATOR_FUNCTION_PARAM_BEGIN = new TypoScriptTokenType("MODIFICATION_OPEN");
  IElementType MODIFICATION_OPERATOR_FUNCTION_PARAM_END = new TypoScriptTokenType("MODIFICATION_CLOSE");
  IElementType MODIFICATION_OPERATOR_FUNCTION_ARGUMENT = new TypoScriptTokenType("MODIFICATION_VALUE");

  IElementType OBJECT_PATH_ENTITY = new TypoScriptTokenType("OBJECT_PATH_ENTITY");
  IElementType OBJECT_PATH_SEPARATOR = new TypoScriptTokenType("OBJECT_PATH_SEPARATOR");

  IElementType INCLUDE_STATEMENT = new TypoScriptTokenType("INCLUDE");
  IElementType CONDITION = new TypoScriptTokenType("CONDITION");*/
}
 //do we need to declare operators again?

object_path ::= OBJECT_PATH_ENTITY (OBJECT_PATH_SEPARATOR OBJECT_PATH_ENTITY)*
meta internal_object_path ::= object_path | OBJECT_PATH_SEPARATOR object_path

assignment ::= ASSIGNMENT ASSIGNMENT_VALUE
meta internal_assignment ::= internal_object_path ASSIGNMENT ASSIGNMENT_VALUE

value_modification ::= MODIFY MODIFICATION_FUNCTION MODIFICATION_OPEN MODIFICATION_VALUE MODIFICATION_CLOSE

multiline_value ::= MULTILINE_OPEN IGNORED_TEXT? (MULTILINE_VALUE)* MULTILINE_CLOSE IGNORED_TEXT?

copying ::=  COPY object_path

unsetting ::=  UNSET IGNORED_TEXT?

meta expression ::= assignment | value_modification | multiline_value | copying | unsetting | codeBlock

codeBlock ::= object_path CODE_BLOCK_OPEN IGNORED_TEXT? (expression)* CODE_BLOCK_CLOSE IGNORED_TEXT?






